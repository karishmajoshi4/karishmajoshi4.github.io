{"version":3,"sources":["images/KJ Logo.png","docs/KJ-Resume 2019.pdf","components/Navbar.jsx","components/Loading.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Link","to","src","Avatar","href","ResumeLink","target","Component","Loading","LoadableHome","Loadable","loader","e","then","bind","loading","LoadableAbout","LoadableWork","Promise","all","LoadableSketchpressions","library","add","fab","fas","App","components_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8SCgCzBC,mLAvBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cACrBH,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAQJ,UAAU,qBAGhCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,mBAA5B,SACAH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,uEAAuEL,UAAU,mBAAzF,QACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAmBF,UAAU,mBAAtC,mBACAH,EAAAC,EAAAC,cAAA,KAAGM,KAAMC,IAAYC,OAAO,SAASP,UAAU,mBAA/C,UACAH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,qFAAqFE,OAAO,SAASP,UAAU,mBAAvH,2BAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAjBJQ,6BCLAC,mLAEjB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,iCAL2BS,qCCW/BE,SAAeC,IAAS,CAAEC,OAAQ,kBAAMlB,EAAAmB,EAAA,GAAAC,KAAApB,EAAAqB,KAAA,YAAiCC,QAASP,KAClFQ,EAAgBN,IAAS,CAACC,OAAQ,kBAAMlB,EAAAmB,EAAA,GAAAC,KAAApB,EAAAqB,KAAA,YAAkCC,QAASP,IACnFS,EAAeP,IAAS,CAACC,OAAQ,kBAAMO,QAAAC,IAAA,CAAA1B,EAAAmB,EAAA,GAAAnB,EAAAmB,EAAA,KAAAC,KAAApB,EAAAqB,KAAA,YAAiCC,QAASP,IACjFY,EAA0BV,IAAS,CAACC,OAAQ,kBAAMlB,EAAAmB,EAAA,GAAAC,KAAApB,EAAAqB,KAAA,YAA4CC,QAASP,IAE7Ga,IAAQC,IAAIC,IAAKC,SAwBFC,mLApBX,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAD,MAEA9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWtB,IACnCb,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAM,QAASC,UAAWtB,IACjCb,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAM,SAAUC,UAAWf,IAClCpB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAM,QAASC,UAAWd,IACjCrB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAM,mBAAoBC,UAAWX,IAE5CxB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOG,UAAWtB,cAdZF,aCREyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECXNC,IAASC,OACP1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEDC,SAASC,eAAe,SDsHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,KAAK,SAAAiC,GACjCA,EAAaC","file":"static/js/main.d3783191.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/KJ Logo.55ac03ab.png\";","module.exports = __webpack_public_path__ + \"static/media/KJ-Resume 2019.c4dce6c1.pdf\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../images/KJ Logo.png';\n\nimport '../styles/Navbar.scss';\nimport ResumeLink from '../docs/KJ-Resume 2019.pdf';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"custom-navbar\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-2 text-center\">\n            <Link to=\"/\" className=\"page-title\">\n              <img src={Avatar} className=\"img-fluid w-25\" />\n            </Link>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-9 text-right\">\n            <Link to=\"/about\" className=\"navigation-link\">About</Link>\n            <a href=\"https://www.behance.net/gallery/90304493/Portfolio-of-Work-2017-2020\" className=\"navigation-link\">Work</a>\n            <Link to=\"/sketchpressions\" className=\"navigation-link\">Sketchpressions</Link>\n            <a href={ResumeLink} target=\"_blank\" className=\"navigation-link\">Resume</a>\n            <a href=\"https://drive.google.com/open?id=0BypWPAmJdsyuMlV3TUpiRFAyaS0ybW1wT1hXOEQ4X3BPNDZ3\" target=\"_blank\" className=\"navigation-link\">Architecture Portfolio</a>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-1\">\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, {Component} from 'react';\n\nexport default class Loading extends Component {\n  render() {\n    return(\n      <div className=\"row\">\n        <div className=\"col-md-12 text-center mt-5\">\n          <h4>loading...</h4>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/Navbar.jsx';\nimport Loadable from 'react-loadable';\nimport Loading from './components/Loading.jsx';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nimport \"./styles/Custom.scss\";\n\nconst LoadableHome = Loadable({ loader: () => import('./components/Home.jsx'), loading: Loading});\nconst LoadableAbout = Loadable({loader: () => import('./components/About.jsx'), loading: Loading});\nconst LoadableWork = Loadable({loader: () => import('./components/Work.jsx'), loading: Loading});\nconst LoadableSketchpressions = Loadable({loader: () => import('./components/Sketchpressions.jsx'), loading: Loading});\n\nlibrary.add(fab, fas);\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route exact path={'/'} component={LoadableHome} />\n            <Route path={'/home'} component={LoadableHome} />\n            <Route path={'/about'} component={LoadableAbout} />\n            <Route path={'/work'} component={LoadableWork} />\n            <Route path={'/sketchpressions'} component={LoadableSketchpressions} />\n\n            <Route component={LoadableHome} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}